<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Turnos ‚Äì La Tablada</title>
  <!-- Tailwind via CDN -->
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    @media print {
      .no-print { display:none }
      body { font-size: 11px; }
      .card { break-inside: avoid; }
    }
    .badge { display:inline-flex; align-items:center; padding:0.1rem 0.4rem; border-radius:9999px; font-size:0.75rem; font-weight:500; }
    .b-crovara { background:#dbeafe; color:#1e40af; }
    .b-canning { background:#fef3c7; color:#92400e; }
    .b-libre   { background:#d1fae5; color:#065f46; }
    .b-red     { background:#fae8ff; color:#86198f; }
  </style>
</head>
<body class="bg-slate-50 text-slate-900">
  <header class="no-print sticky top-0 z-10 bg-white/90 backdrop-blur border-b border-slate-200">
    <div class="max-w-5xl mx-auto px-4 py-3 flex flex-col gap-3 md:flex-row md:items-center md:justify-between">
      <h1 class="text-xl font-semibold">üìÖ Turnos ‚Äì Sucursal La Tablada</h1>
      <div class="flex flex-wrap gap-2">
        <select id="empleadoSelect" class="px-3 py-2 rounded-md border">
          <option value="Mat√≠as">Mat√≠as</option>
          <option value="Iv√°n">Iv√°n</option>
          <option value="Lautaro">Lautaro</option>
        </select>
        <button id="btnReload" class="px-3 py-2 rounded-md bg-slate-900 text-white">Recargar</button>
      </div>
    </div>
  </header>

  <main class="max-w-5xl mx-auto p-4 flex flex-col gap-6">
    <!-- Calendario -->
    <section class="card p-4 bg-white rounded-2xl shadow-sm border border-slate-200">
      <h2 class="text-lg font-semibold mb-3">Calendario (eventos del seleccionado)</h2>
      <div id="calendar" class="space-y-6"></div>
    </section>

    <!-- Consultas r√°pidas -->
    <section class="card p-4 bg-white rounded-2xl shadow-sm border border-slate-200">
      <h2 class="text-lg font-semibold mb-3">Consultas r√°pidas</h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
        <button class="qbtn px-4 py-3 rounded-xl bg-slate-100 hover:bg-slate-200" data-q="libre">Pr√≥ximo s√°bado libre</button>
        <button class="qbtn px-4 py-3 rounded-xl bg-slate-100 hover:bg-slate-200" data-q="canning">Pr√≥ximo s√°bado Canning</button>
        <button class="qbtn px-4 py-3 rounded-xl bg-slate-100 hover:bg-slate-200" data-q="reduccion">Pr√≥xima jornada reducida</button>
      </div>
      <div id="quickResult" class="mt-3 text-sm text-slate-700"></div>
    </section>

    <!-- Intercambio de d√≠a -->
    <section class="card p-4 bg-white rounded-2xl shadow-sm border border-slate-200">
      <h2 class="text-lg font-semibold mb-2">Intercambio de d√≠a</h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
        <input id="swapDate" type="date" class="w-full px-3 py-2 rounded-md border" />
        <select id="swapRequester" class="w-full px-3 py-2 rounded-md border">
          <option>Mat√≠as</option>
          <option>Iv√°n</option>
          <option>Lautaro</option>
        </select>
        <button id="btnCheckDay" class="w-full px-3 py-2 rounded-md bg-slate-900 text-white">Ver asignados</button>
      </div>
      <div id="swapInfo" class="mt-3 text-sm"></div>
    </section>
  </main>

  <script>
    // ========== CONFIG ==========
    // Peg√° tu CSV publicado ac√°:
    CSV_URL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQh4OOFKU2Z9YU3nTYLeSngPXFAPqADgO_HeT1JVYlLwmPpCnV0aZE-XAlVTEqytac4rOkjX34hD5Rw/pubhtml';
    loadData(CSV_URL);

    // ========== UTILS ==========
    const parseCSV = (text) => {
      const lines = text.trim().split(/\r?\n/);
      const headers = lines[0].split(",").map(h => h.trim());
      return lines.slice(1).map(line => {
        const cols = line.split(/,(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/);
        const obj = {};
        headers.forEach((h,i) => obj[h] = (cols[i]||'').replace(/^\"|\"$/g,'').trim());
        return obj;
      });
    };
    const fmt = (d) => new Date(d).toLocaleDateString('es-AR',{day:'2-digit',month:'short'});
    const monthKey = (d) => new Date(d).toLocaleDateString('es-AR',{month:'long',year:'numeric'});
    const clean = (s) => (s||'').normalize('NFD').replace(/[\u0300-\u036f]/g,'');

    // ========== DATA ==========
    let rows=[];
    async function loadData(url){
      try {
        const res=await fetch(url);
        if(!res.ok) throw new Error("No se pudo cargar CSV");
        const txt=await res.text();
        rows=parseCSV(txt).map(r=>({
          fecha:r['Fecha'], dia:r['D√≠a']||'',
          crovara:r['Crovara (S√°bado)']||'',
          canning:r['Canning (S√°bado)']||'',
          libre:r['Libre (S√°bado)']||'',
          reduccion:r['Reducci√≥n 8-14']||''
        }));
        renderCalendar();
      } catch(e){
        document.getElementById('calendar').innerHTML=`<p class='text-red-600'>‚ö†Ô∏è Error: ${e.message}</p>`;
      }
    }

    // ========== RENDER ==========
    function renderCalendar(){
      const empleado=document.getElementById('empleadoSelect').value;
      const calEl=document.getElementById('calendar');
      calEl.innerHTML='';
      const mine=rows.filter(r=>
        clean(r.libre).includes(clean(empleado)) ||
        clean(r.crovara).includes(clean(empleado)) ||
        clean(r.canning).includes(clean(empleado)) ||
        clean(r.reduccion).includes(clean(empleado))
      );
      const groups={};
      mine.forEach(r=>{
        const k=monthKey(r.fecha);
        (groups[k] ||= []).push(r);
      });
      Object.entries(groups).forEach(([mes,arr])=>{
        arr.sort((a,b)=>new Date(a.fecha)-new Date(b.fecha));
        const box=document.createElement('div');
        box.innerHTML=`<div class="border rounded-xl p-3">
          <div class="font-semibold mb-2">${mes}</div>
          ${arr.map(r=>`
            <div class="flex items-center justify-between py-1 border-b last:border-b-0">
              <div class="text-sm font-medium">${fmt(r.fecha)} (${r.dia})</div>
              <div class="flex gap-2">
                ${clean(r.libre).includes(clean(empleado))?'<span class="badge b-libre">LIBRE</span>':''}
                ${clean(r.crovara).includes(clean(empleado))?'<span class="badge b-crovara">Crovara</span>':''}
                ${clean(r.canning).includes(clean(empleado))?'<span class="badge b-canning">Canning</span>':''}
                ${clean(r.reduccion).includes(clean(empleado))?'<span class="badge b-red">Reducci√≥n</span>':''}
              </div>
            </div>
          `).join('')}
        </div>`;
        calEl.appendChild(box);
      });
    }

    // ========== EVENTOS ==========
    document.getElementById('empleadoSelect').addEventListener('change', renderCalendar);
  </script>
</body>
</html>
